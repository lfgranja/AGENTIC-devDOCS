name: Post-Merge Issue Creation

on:
  pull_request:
    types: [closed]
    branches: [dev, main]

jobs:
  create-issues:
    # Only run if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # Checkout the merge commit
        ref: refs/pull/${{ github.event.pull_request.number }}/merge
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub
        
    - name: Find ISSUES_TO_CREATE documentation
      id: find-docs
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        ISSUES_FILE="devDOCS/$PR_NUMBER/ISSUES_TO_CREATE${PR_NUMBER}.md"
        
        if [ -f "$ISSUES_FILE" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "issues_file=$ISSUES_FILE" >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "Issues documentation not found for PR #$PR_NUMBER"
        fi
        
    - name: Create issues from documentation
      if: steps.find-docs.outputs.found == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_NAME: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        ISSUES_FILE: ${{ steps.find-docs.outputs.issues_file }}
      run: |
        python ${{ github.workspace }}/devDOCS/create_issues.py \
          --token $GITHUB_TOKEN \
          --repo $REPO_NAME \
          --pr $PR_NUMBER \
          --issues-file $ISSUES_FILE
          
    - name: Commit updated documentation
      if: steps.find-docs.outputs.found == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add ${{ steps.find-docs.outputs.issues_file }}
        git commit -m "docs: update ISSUES_TO_CREATE${{ github.event.pull_request.number }} with created issue links"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Comment on PR with created issues
      if: steps.find-docs.outputs.found == 'true'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const prNumber = ${{ github.event.pull_request.number }};
          const issuesFile = '${{ steps.find-docs.outputs.issues_file }}';
          
          // Read the updated issues file to get created issue links
          const content = fs.readFileSync(issuesFile, 'utf8');
          
          // Extract issue links from the "Created Issues" section
          const createdIssuesSection = content.split('## Created Issues')[1];
          if (createdIssuesSection) {
            const comment = `## Automatically Created Issues

` +
                           `The following issues were automatically created from the ISSUES_TO_CREATE documentation:

` +
                           createdIssuesSection;
                           
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }